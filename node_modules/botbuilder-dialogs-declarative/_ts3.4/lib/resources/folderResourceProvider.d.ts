/**
 * @module botbuilder-dialogs-declarative
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { FSWatcher } from 'chokidar';
import { Resource } from './resource';
import { ResourceProvider } from './resourceProvider';
import { ResourceExplorer } from './resourceExplorer';
/**
 * Class which gives resource explorer access to resources which are stored in file system.
 */
export declare class FolderResourceProvider extends ResourceProvider {
    private _watcher;
    private _resources;
    /**
     * Initializes a new instance of the `FolderResourceProvider` class.
     * @param resourceExplorer Resource explorer.
     * @param folder Root folder.
     * @param includeSubFolders Whether include its sub folders.
     * @param monitorChanges Whether monitor changes.
     */
    constructor(resourceExplorer: ResourceExplorer, folder: string, includeSubFolders?: boolean, monitorChanges?: boolean);
    /*
    * Gets attached file watcher.
    */
    readonly watcher: FSWatcher;
    /**
     * Folder to enumerate.
     */
    directory: string;
    /**
     * A value indicating whether to include subfolders.
     */
    includeSubFolders: boolean;
    /**
     * Refresh any cached content and look for new content.
     */
    refresh(): void;
    /**
     * Gets resource by its id.
     * @param id Resource id.
     */
    getResource(id: string): Resource;
    /**
     * Gets resources by extension.
     * @param extension Resource extension.
     */
    getResources(extension: string): Resource[];
    /**
     * @private
     */
    private onResourceAdded;
    /**
     * @private
     */
    private onResourceChanged;
    /**
     * @private
     */
    private onResourceRemoved;
}
//# sourceMappingURL=folderResourceProvider.d.ts.map
