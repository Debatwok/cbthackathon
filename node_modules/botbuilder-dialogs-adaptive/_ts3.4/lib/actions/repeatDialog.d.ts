/**
 * @module botbuilder-dialogs-adaptive
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { BaseInvokeDialog, BaseInvokeDialogConfiguration } from './baseInvokeDialog';
import { BoolExpression } from 'adaptive-expressions';
import { BoolProperty } from '../properties';
import { Converter, ConverterFactory, DialogContext, DialogTurnResult } from 'botbuilder-dialogs';
export interface RepeatDialogConfiguration extends BaseInvokeDialogConfiguration {
    disabled?: BoolProperty;
    allowLoop?: BoolProperty;
}
/**
 * Action which repeats the active [Dialog](xref:botbuilder-dialogs.Dialog) (restarting it).
 */
export declare class RepeatDialog<O extends object = {}> extends BaseInvokeDialog<O> implements RepeatDialogConfiguration {
    static $kind: string;
    constructor();
    /**
     * An optional expression which if is true will disable this action.
     */
    disabled?: BoolExpression;
    /**
     * An optional expression which if is true will allow loop of the repeated dialog.
     */
    allowLoop?: BoolExpression;
    getConverter(property: keyof RepeatDialogConfiguration): Converter | ConverterFactory;
    /**
     * Starts a new [Dialog](xref:botbuilder-dialogs.Dialog) and pushes it onto the dialog stack.
     * @param dc The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the current turn of conversation.
     * @param options Optional. Initial information to pass to the dialog.
     * @returns A `Promise` representing the asynchronous operation.
     */
    beginDialog(dc: DialogContext, options?: O): Promise<DialogTurnResult>;
}
//# sourceMappingURL=repeatDialog.d.ts.map
