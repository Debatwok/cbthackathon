/**
 * @module botbuilder-dialogs-adaptive
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { Entity } from 'botbuilder';
import { DialogContext, ModelResult } from 'botbuilder-dialogs';
import { EntityRecognizer } from './entityRecognizer';
export declare abstract class TextEntityRecognizer extends EntityRecognizer {
    /**
     * Recognizes entities from an [Entity](xref:botframework-schema.Entity) list.
     *
     * @param {DialogContext} dialogContext The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the current turn of conversation.
     * @param {string} text Text to recognize.
     * @param {string} locale Locale to use.
     * @param {Entity[]} entities The [Entity](xref:botframework-schema.Entity) array to be recognized.
     * @returns {Promise<Entity[]>} Recognized [Entity](xref:botframework-schema.Entity) list Promise.
     */
    recognizeEntities(dialogContext: DialogContext, text: string, locale: string, entities: Entity[]): Promise<Entity[]>;
    protected abstract _recognize(text: string, culture: string): ModelResult[];
}
//# sourceMappingURL=textEntityRecognizer.d.ts.map
