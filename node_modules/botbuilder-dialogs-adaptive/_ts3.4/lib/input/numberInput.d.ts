import { Converter, ConverterFactory, DialogContext } from 'botbuilder-dialogs';
import { InputDialog, InputDialogConfiguration, InputState } from './inputDialog';
import { NumberProperty, StringProperty } from '../properties';
import { NumberExpression, StringExpression } from 'adaptive-expressions';
export interface NumberInputConfiguration extends InputDialogConfiguration {
    defaultLocale?: StringProperty;
    outputFormat?: NumberProperty;
}
/**
 * Input dialog for asking for numbers.
 */
export declare class NumberInput extends InputDialog implements NumberInputConfiguration {
    static $kind: string;
    defaultLocale?: StringExpression;
    outputFormat?: NumberExpression;
    getConverter(property: keyof NumberInputConfiguration): Converter | ConverterFactory;
    /**
     * @protected
     */
    protected onComputeId(): string;
    /**
     * @protected
     * Called when input has been received.
     * @param dc The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the current turn of conversation.
     * @returns [InputState](xref:botbuilder-dialogs-adaptive.InputState) which reflects whether input was recognized as valid or not.
     */
    protected onRecognizeInput(dc: DialogContext): Promise<InputState>;
}
//# sourceMappingURL=numberInput.d.ts.map
