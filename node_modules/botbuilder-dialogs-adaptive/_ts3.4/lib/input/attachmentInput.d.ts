import { Converter, ConverterFactory, DialogContext } from 'botbuilder-dialogs';
import { EnumExpression } from 'adaptive-expressions';
import { EnumProperty } from '../properties';
import { InputDialog, InputDialogConfiguration, InputState } from './inputDialog';
export declare enum AttachmentOutputFormat {
    all = "all",
    first = "first"
}
export interface AttachmentInputConfiguration extends InputDialogConfiguration {
    outputFormat?: EnumProperty<AttachmentOutputFormat>;
}
/**
 * Input dialog which prompts the user to send a file.
 */
export declare class AttachmentInput extends InputDialog implements AttachmentInputConfiguration {
    static $kind: string;
    outputFormat: EnumExpression<AttachmentOutputFormat>;
    /**
     * @protected
     */
    getConverter(property: keyof AttachmentInputConfiguration): Converter | ConverterFactory;
    protected onComputeId(): string;
    /**
     * @protected
     * Called when input has been received.
     * @param dc The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the current turn of conversation.
     * @returns [InputState](xref:botbuilder-dialogs-adaptive.InputState) which reflects whether input was recognized as valid or not.
     */
    protected onRecognizeInput(dc: DialogContext): Promise<InputState>;
}
//# sourceMappingURL=attachmentInput.d.ts.map
