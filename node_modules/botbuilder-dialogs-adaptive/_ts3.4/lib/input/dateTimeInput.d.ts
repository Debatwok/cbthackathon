/**
 * @module botbuilder-dialogs-adaptive
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { Converter, ConverterFactory, DialogContext } from 'botbuilder-dialogs';
import { StringExpression } from 'adaptive-expressions';
import { InputDialog, InputDialogConfiguration, InputState } from './inputDialog';
import { StringProperty } from '../properties';
export interface DateTimeInputConfiguration extends InputDialogConfiguration {
    defaultLocale?: StringProperty;
    outputFormat?: StringProperty;
}
/**
 * Input dialog to collect a datetime from the user.
 */
export declare class DateTimeInput extends InputDialog implements DateTimeInputConfiguration {
    static $kind: string;
    defaultLocale: StringExpression;
    outputFormat: StringExpression;
    getConverter(property: keyof DateTimeInputConfiguration): Converter | ConverterFactory;
    /**
     * @protected
     */
    protected onComputeId(): string;
    /**
     * @protected
     * Called when input has been received.
     * @param dc The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the current turn of conversation.
     * @returns [InputState](xref:botbuilder-dialogs-adaptive.InputState) which reflects whether input was recognized as valid or not.
     */
    protected onRecognizeInput(dc: DialogContext): Promise<InputState>;
}
//# sourceMappingURL=dateTimeInput.d.ts.map
