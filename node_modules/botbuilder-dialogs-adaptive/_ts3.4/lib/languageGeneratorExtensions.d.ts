/**
 * @module botbuilder-dialogs-adaptive
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { DialogManager } from 'botbuilder-dialogs';
import { LanguageGenerator } from './languageGenerator';
import { LanguagePolicy } from './languagePolicy';
/**
 * The key to get or set language generator from turn state.
 */
export declare const languageGeneratorKey: unique symbol;
/**
 * The key to get or set language generator manager from turn state.
 */
export declare const languageGeneratorManagerKey: unique symbol;
/**
 * The key to get or set language policy from turn state.
 */
export declare const languagePolicyKey: unique symbol;
/**
 * Extension methods for language generator.
 */
export declare class LanguageGeneratorExtensions {
    private static readonly _languageGeneratorManagers;
    /**
     * Register default LG file or a language generator as default language generator.
     * @param dialogManager The dialog manager to add language generator to.
     * @param lg LG resource id (default: main.lg) or language generator to be added.
     * @returns dialog manager with language generator.
     */
    static useLanguageGeneration(dialogManager: DialogManager, lg?: string | LanguageGenerator): DialogManager;
    /**
     * Register language policy as default policy.
     * @param dialogManager The dialog manager to add language policy to.
     * @param policy Policy to use.
     * @returns dialog manager with language policy.
     */
    static useLanguagePolicy(dialogManager: DialogManager, policy: LanguagePolicy): DialogManager;
}
//# sourceMappingURL=languageGeneratorExtensions.d.ts.map
