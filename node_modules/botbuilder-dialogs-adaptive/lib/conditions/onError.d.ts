/**
 * @module botbuilder-dialogs-adaptive
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { Dialog } from 'botbuilder-dialogs';
import { OnDialogEvent } from './onDialogEvent';
import { ActionContext } from '../actionContext';
import { ActionChangeList } from '../actionChangeList';
/**
 * Actions triggered when an error event has been emitted.
 */
export declare class OnError extends OnDialogEvent {
    static $kind: string;
    /**
     * Initializes a new instance of the [OnError](xref:botbuilder-dialogs-adaptive.OnError) class.
     * @param actions Optional. A [Dialog](xref:botbuilder-dialogs.Dialog) list containing the actions to add to the plan when the rule constraints are met.
     * @param condition Optional. Condition which needs to be met for the actions to be executed.
     */
    constructor(actions?: Dialog[], condition?: string);
    /**
     * Called when a change list is created.
     * @param actionContext [ActionContext](xref:botbuilder-dialogs-adaptive.ActionContext) to use for evaluation.
     * @param dialogOptions Optional. Object with dialog options.
     * @returns An [ActionChangeList](xref:botbuilder-dialogs-adaptive.ActionChangeList) with the list of actions.
     */
    onCreateChangeList(actionContext: ActionContext, dialogOptions?: any): ActionChangeList;
}
//# sourceMappingURL=onError.d.ts.map