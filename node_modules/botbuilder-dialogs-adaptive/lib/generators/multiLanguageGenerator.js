"use strict";
/**
 * @module botbuilder-dialogs-adaptive
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MultiLanguageGenerator = void 0;
const multiLanguageGeneratorBase_1 = require("./multiLanguageGeneratorBase");
/**
 * LanguageGenerator which uses implements a map of locale->LanguageGenerator for the locale
 * and has a policy which controls fallback (try en-us -> en -> default).
 */
class MultiLanguageGenerator extends multiLanguageGeneratorBase_1.MultiLanguageGeneratorBase {
    constructor() {
        super(...arguments);
        /**
         * Gets or sets the language generators for multiple languages.
         */
        this.languageGenerators = new Map();
    }
    /**
     * Implementation of lookup by locale.
     * @param dialogContext Context for the current turn of conversation with the user.
     * @param locale Locale to lookup.
     */
    tryGetGenerator(dialogContext, locale) {
        if (this.languageGenerators.has(locale)) {
            return { exist: true, result: this.languageGenerators.get(locale) };
        }
        else {
            return { exist: false, result: undefined };
        }
    }
}
exports.MultiLanguageGenerator = MultiLanguageGenerator;
MultiLanguageGenerator.$kind = 'Microsoft.MultiLanguageGenerator';
//# sourceMappingURL=multiLanguageGenerator.js.map