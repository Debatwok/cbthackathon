/**
 * @module botbuilder-dialogs-adaptive
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { BoolProperty, StringProperty, UnknownProperty } from '../properties';
import { BoolExpression, StringExpression, ValueExpression } from 'adaptive-expressions';
import { Converter, ConverterFactory, Dialog, DialogConfiguration, DialogContext, DialogTurnResult } from 'botbuilder-dialogs';
export interface ContinueConversationLaterConfiguration extends DialogConfiguration {
    disabled?: BoolProperty;
    date?: StringProperty;
    value?: UnknownProperty;
}
/**
 * Action which schedules the current conversation to be continued at a later time.
 */
export declare class ContinueConversationLater extends Dialog implements ContinueConversationLaterConfiguration {
    static $kind: string;
    /**
     * Gets or sets an optional expression which if is true will disable this action.
     */
    disabled?: BoolExpression;
    /**
     * Gets or sets the expression which resolves to the date/time to continue the conversation.
     */
    date: StringExpression;
    /**
     * Gets or sets an optional value to use for EventActivity.Value.
     */
    value: ValueExpression;
    getConverter(property: keyof ContinueConversationLaterConfiguration): Converter | ConverterFactory;
    /**
     * Called when the [Dialog](xref:botbuilder-dialogs.Dialog) is started and pushed onto the dialog stack.
     *
     * @param {DialogContext} dc The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the current turn of conversation.
     * @param {object} options Optional. Initial information to pass to the dialog.
     * @returns {Promise<DialogTurnResult>} A `Promise` representing the asynchronous operation.
     */
    beginDialog(dc: DialogContext, options?: Record<string, unknown>): Promise<DialogTurnResult>;
    /**
     * @protected
     * @returns {string} A `string` representing the compute Id.
     */
    protected onComputeId(): string;
}
//# sourceMappingURL=continueConversationLater.d.ts.map