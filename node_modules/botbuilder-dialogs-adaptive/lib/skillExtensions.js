"use strict";
/**
 * @module botbuilder-dialogs-adaptive
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SkillExtensions = exports.skillConversationIdFactoryKey = exports.skillClientKey = void 0;
/**
 * The key to get or set skill client from turn state.
 */
exports.skillClientKey = Symbol('SkillClient');
/**
 * The key to get or set skill conversation id factory from turn state.
 */
exports.skillConversationIdFactoryKey = Symbol('SkillConversationIdFactory');
/**
 * Extension methods for skills.
 */
class SkillExtensions {
    /**
     * Configures the skill client to use.
     * @param dialogManager The dialog manager to add skill client to.
     * @param skillClient The skill client to be added.
     */
    static useSkillClient(dialogManager, skillClient) {
        dialogManager.initialTurnState.set(exports.skillClientKey, skillClient);
        return dialogManager;
    }
    /**
     * Configures the skill conversation id factory to use.
     * @param dialogManager The dialog manager to add skill conversation id factory to.
     * @param skillConversationIdFactory The skill conversation id factory to be added.
     */
    static useSkillConversationIdFactory(dialogManager, skillConversationIdFactory) {
        dialogManager.initialTurnState.set(exports.skillConversationIdFactoryKey, skillConversationIdFactory);
        return dialogManager;
    }
}
exports.SkillExtensions = SkillExtensions;
//# sourceMappingURL=skillExtensions.js.map