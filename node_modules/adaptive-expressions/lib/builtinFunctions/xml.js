"use strict";
/**
 * @module adaptive-expressions
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const expressionEvaluator_1 = require("../expressionEvaluator");
const expressionType_1 = require("../expressionType");
const functionUtils_1 = require("../functionUtils");
const returnType_1 = require("../returnType");
/**
 * Return the newline string according to the environment.
 */
class XML extends expressionEvaluator_1.ExpressionEvaluator {
    /**
     * Initializes a new instance of the [EOL](xref:adaptive-expressions.EOL) class.
     */
    constructor() {
        super(expressionType_1.ExpressionType.XML, XML.evaluator(), returnType_1.ReturnType.String, functionUtils_1.FunctionUtils.validateUnary);
    }
    static evaluator() {
        return functionUtils_1.FunctionUtils.applyWithError((args) => XML.platformSpecificXML(args));
    }
    static platformSpecificXML(args) {
        if (typeof window !== 'undefined' || typeof self !== 'undefined') {
            // this is for evaluating in browser environment, however it is not covered by any test currently
            // x2js package can run on browser environment, see ref: https://www.npmjs.com/package/x2js
            // eslint-disable-next-line @typescript-eslint/no-var-requires
            const X2JS = require('x2js');
            let result;
            let error;
            let obj;
            try {
                if (typeof args[0] === 'string') {
                    obj = JSON.parse(args[0]);
                }
                else if (typeof args[0] === 'object') {
                    obj = args[0];
                }
                result = new X2JS.json2xml_str(obj);
            }
            catch (err) {
                error = `${args[0]} is not a valid json`;
            }
            return { value: result, error: error };
        }
        else {
            // xml2js only support node environment, see ref: https://github.com/Leonidas-from-XIV/node-xml2js
            let result;
            let error;
            // eslint-disable-next-line @typescript-eslint/no-var-requires
            const xml2js = require('xml2js');
            let obj;
            try {
                if (typeof args[0] === 'string') {
                    obj = JSON.parse(args[0]);
                }
                else if (typeof args[0] === 'object') {
                    obj = args[0];
                }
                const builder = new xml2js.Builder();
                result = builder.buildObject(obj);
            }
            catch (err) {
                error = `${args[0]} is not a valid json`;
            }
            return { value: result, error: error };
        }
    }
}
exports.XML = XML;
//# sourceMappingURL=xml.js.map