"use strict";
/**
 * @module botbuilder-lg
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const position_1 = require("./position");
/**
 * Range class
 */
class Range {
    /**
     * Creates a new instance of the [Range](xref:botbuilder-lg.Range) class.
     * @param x Starting line number in a file or [Position](xref:botbuilder-lg.Position).
     * @param y Starting character number in a file or [Position](xref:botbuilder-lg.Position).
     * @param endLine Optional. Ending line number in a file.
     * @param endChar Optional. Ending character number in the end line.
     */
    constructor(x, y, endLine, endChar) {
        this.toString = () => {
            let result = this.start.toString();
            if (this.start.line <= this.end.line && this.start.character < this.end.character) {
                result += ` - ${this.end.toString()}`;
            }
            return result;
        };
        if (typeof x === 'number' && typeof y === 'number') {
            this.start = new position_1.Position(x, y);
            this.end = new position_1.Position(endLine, endChar);
        }
        else if (x instanceof position_1.Position && y instanceof position_1.Position) {
            this.start = x;
            this.end = y;
        }
    }
}
Range.DefaultRange = new Range(1, 0, 1, 0);
exports.Range = Range;
//# sourceMappingURL=range.js.map